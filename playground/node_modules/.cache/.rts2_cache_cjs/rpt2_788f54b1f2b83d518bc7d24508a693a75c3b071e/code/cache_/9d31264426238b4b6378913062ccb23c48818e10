{"code":"import React, { useMemo } from \"react\";\r\nimport { styled } from \"goober\";\r\nimport EditorSetup from \"./EditorSetup\";\r\nimport { StyledTabs, StyledTabList, StyledTab, StyledTabPanels, StyledTabPanel, } from \"../TabStyles\";\r\nconst TabContainer = styled(StyledTabs) `\n  min-width: ${(props) => props.theme.container.minWidth};\n`;\r\nconst Editor = ({ code, defaultTab, onChange, width }) => {\r\n    const tabs = useMemo(() => {\r\n        const tabsArr = [];\r\n        if (code.markup) {\r\n            tabsArr.push({ name: \"HTML\", value: \"markup\", code: code.markup });\r\n        }\r\n        if (code.css) {\r\n            tabsArr.push({ name: \"CSS\", value: \"css\", code: code.css });\r\n        }\r\n        if (code.javascript) {\r\n            tabsArr.push({ name: \"JS\", value: \"javascript\", code: code.javascript });\r\n        }\r\n        return tabsArr;\r\n    }, []);\r\n    return (React.createElement(TabContainer, { defaultIndex: tabs.findIndex((tab) => tab.code && tab.value === defaultTab), style: { width: width } },\r\n        React.createElement(StyledTabList, null, tabs.map((tab) => tab.code && React.createElement(StyledTab, { key: tab.value }, tab.name))),\r\n        React.createElement(StyledTabPanels, null, tabs.map((tab) => tab.code && (React.createElement(StyledTabPanel, { key: tab.value },\r\n            React.createElement(EditorSetup, { code: code[tab.value], onChange: onChange, language: tab.value })))))));\r\n};\r\nexport default Editor;\r\n//# sourceMappingURL=index.js.map","references":["/Users/bidishamondal/Desktop/Projects/frontend-code-playground/node_modules/@types/react/index.d.ts","/Users/bidishamondal/Desktop/Projects/frontend-code-playground/node_modules/goober/goober.d.ts","/Users/bidishamondal/Desktop/Projects/frontend-code-playground/playground/src/types.ts","/Users/bidishamondal/Desktop/Projects/frontend-code-playground/playground/src/Editor/EditorSetup.tsx","/Users/bidishamondal/Desktop/Projects/frontend-code-playground/playground/src/types.ts","/Users/bidishamondal/Desktop/Projects/frontend-code-playground/playground/src/TabStyles.tsx"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/Editor/index.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,EAAE,EAAM,OAAO,EAAE,MAAM,OAAO,CAAC;AAC3C,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAEhC,OAAO,WAAW,MAAM,eAAe,CAAC;AAExC,OAAO,EACL,UAAU,EACV,aAAa,EACb,SAAS,EACT,eAAe,EACf,cAAc,GACf,MAAM,cAAc,CAAC;AAEtB,MAAM,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,CAAA;eACxB,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ;CACvD,CAAC;AASF,MAAM,MAAM,GAAe,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE;IACnE,MAAM,IAAI,GAAwC,OAAO,CAAC,GAAG,EAAE;QAC7D,MAAM,OAAO,GAAG,EAAE,CAAC;QACnB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;SACpE;QACD,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;SAC7D;QACD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;SAC1E;QACD,OAAO,OAAO,CAAC;IACjB,CAAC,EAAE,EAAE,CAAC,CAAC;IACP,OAAO,CACL,oBAAC,YAAY,IACX,YAAY,EAAE,IAAI,CAAC,SAAS,CAC1B,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,CAC9C,EACD,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;QAEvB,oBAAC,aAAa,QACX,IAAI,CAAC,GAAG,CACP,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,oBAAC,SAAS,IAAC,GAAG,EAAE,GAAG,CAAC,KAAK,IAAG,GAAG,CAAC,IAAI,CAAa,CACvE,CACa;QAChB,oBAAC,eAAe,QACb,IAAI,CAAC,GAAG,CACP,CAAC,GAAG,EAAE,EAAE,CACN,GAAG,CAAC,IAAI,IAAI,CACV,oBAAC,cAAc,IAAC,GAAG,EAAE,GAAG,CAAC,KAAK;YAC5B,oBAAC,WAAW,IACV,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EACrB,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,GAAG,CAAC,KAAK,GACnB,CACa,CAClB,CACJ,CACe,CACL,CAChB,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,MAAM,CAAC\"}","dts":{"name":"/Users/bidishamondal/Desktop/Projects/frontend-code-playground/playground/dist/Editor/index.d.ts","writeByteOrderMark":false,"text":"import { FC } from \"react\";\r\nimport { IEditorTabs, ISnippet } from \"../types\";\r\ninterface IProps {\r\n    width: number;\r\n    code: ISnippet;\r\n    defaultTab: IEditorTabs;\r\n    onChange: (changed: string, type: IEditorTabs) => void;\r\n}\r\ndeclare const Editor: FC<IProps>;\r\nexport default Editor;\r\n"}}

{"code":"import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport getTheme, { theme } from './theme';\r\nconst ThemeContext = createContext(theme);\r\nexport const useTheme = () => useContext(ThemeContext);\r\nexport function ThemeProvider({ mode, userTheme, children }) {\r\n    const [consolidatedTheme, setConsolidatedTheme] = useState(theme);\r\n    useEffect(() => {\r\n        setConsolidatedTheme(getTheme(mode));\r\n    }, [mode]);\r\n    return (React.createElement(ThemeContext.Provider, { value: userTheme ?? consolidatedTheme }, children));\r\n}\r\n//# sourceMappingURL=ThemeProvider.js.map","references":["/Users/bidishamondal/Desktop/Projects/frontend-code-playground/node_modules/@types/react/index.d.ts","/Users/bidishamondal/Desktop/Projects/frontend-code-playground/playground/src/utils/theme.ts"],"map":"{\"version\":3,\"file\":\"ThemeProvider.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/ThemeProvider.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,EAAE,EAAE,aAAa,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAC9E,OAAO,QAAQ,EAAE,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAI1C,MAAM,YAAY,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;AAC1C,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;AAEvD,MAAM,UAAU,aAAa,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE;IACzD,MAAM,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,GAAG,QAAQ,CACxD,KAAK,CACN,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACvC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IAEX,OAAO,CACL,oBAAC,YAAY,CAAC,QAAQ,IAAC,KAAK,EAAE,SAAS,IAAI,iBAAiB,IACzD,QAAQ,CACa,CACzB,CAAA;AACH,CAAC\"}","dts":{"name":"/Users/bidishamondal/Desktop/Projects/frontend-code-playground/playground/dist/utils/ThemeProvider.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\nimport { theme } from './theme';\r\nexport type DefaultTheme = typeof theme;\r\nexport declare const useTheme: () => {\r\n    container: {\r\n        borderColor: string;\r\n        minHeight: string;\r\n        minWidth: string;\r\n    };\r\n    error: {\r\n        background: string;\r\n        color: string;\r\n    };\r\n    console: {\r\n        background: string;\r\n    };\r\n    divider: {\r\n        width: number;\r\n        background: string;\r\n        dividerBackground: string;\r\n        containerWidth: number;\r\n    };\r\n    editor: {\r\n        fontFamily: string;\r\n        backgroundColor: string;\r\n        color: string;\r\n    };\r\n    tabs: {\r\n        tabHeader: {\r\n            borderBottom: string;\r\n            panelBackground: string;\r\n            background: string;\r\n            color: string;\r\n        };\r\n        tabPanel: {\r\n            phoneHeight: string;\r\n        };\r\n        selectedTab: {\r\n            background: string;\r\n            borderBottom: string;\r\n        };\r\n    };\r\n};\r\nexport declare function ThemeProvider({ mode, userTheme, children }: {\r\n    mode: any;\r\n    userTheme: any;\r\n    children: any;\r\n}): React.JSX.Element;\r\n"}}
